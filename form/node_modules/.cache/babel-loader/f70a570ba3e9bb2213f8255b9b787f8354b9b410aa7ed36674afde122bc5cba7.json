{"ast":null,"code":"var _jsxFileName = \"E:\\\\work\\\\formFromSPO\\\\form\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questionsData = {\n  students: {\n    question_choice: {\n      type: \"yesNo\",\n      questions: [\"Нуждаетесь ли вы в дополнительных мероприятиях в колледже?\", \"Удовлетворены ли вы скоростью решения вопросов администрацией колледжа?\"]\n    },\n    question_answer: [\"Какие дополнительные мероприятия необходимо организовать?\", \"Укажите проблемные зоны в официальном сайте колледжа\", \"Укажите проблемные зоны в ведение социальных сетей и чатов\", \"Укажите проблемные зоны в работе буфета и колледжа\"]\n  },\n  teachers: {\n    question_choice: {\n      type: \"yesNo\",\n      questions: [\"Всегда ли доступна Вам вся необходимая информация, касающаяся учебного процесса?\", \"Нуждаетесь ли Вы лично в повышении квалификации?\"]\n    },\n    question_answer: [\"Укажите проблемные зоны в аудиториях\", \"Укажите проблемы учебного процесса\"]\n  },\n  parents: {\n    question_choice: {\n      type: \"yesNo\",\n      questions: [\"Комфортно ли ощущает Ваш ребенок себя в колледже?\", \"Всегда ли при необходимости Вы можете обратиться в колледж за советом?\"]\n    },\n    question_answer: [\"Укажите проблемные зоны в спортивном зале\", \"Укажите проблемы родительских собраний\"]\n  }\n};\nconst SurveyForm = () => {\n  _s();\n  var _questionsData$group, _questionsData$group$, _questionsData$group2, _questionsData$group3;\n  const [group, setGroup] = useState(null);\n  const [answers, setAnswers] = useState({});\n  useEffect(() => {\n    const url = window.location.href;\n    const tokenMatch = url.match(/\\/([a-f0-9]{32})$/);\n    if (tokenMatch) {\n      const extractedToken = tokenMatch[1];\n      fetch(`http://192.168.88.123:8000/forms/${extractedToken}`).then(res => res.json()).then(data => {\n        setGroup(data.group);\n        // Начальная структура answers\n        setAnswers({\n          unit_id: 0,\n          // Предполагаем, что у нас есть unit_id\n          ...questionsData[data.group].question_answer.reduce((acc, q) => {\n            acc[q] = \"\"; // Изначально задаем пустую строку для текстовых ответов\n            return acc;\n          }, {}),\n          ...questionsData[data.group].question_choice.questions.reduce((acc, q) => {\n            acc[q] = 0; // Изначально задаем 0 для вопросов да/нет\n            return acc;\n          }, {})\n        });\n      });\n    }\n  }, []);\n  const handleYesNoChange = (question, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [question]: value\n    }));\n  };\n  const handleTextChange = (question, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [question]: value\n    }));\n  };\n  const handleSubmit = () => {\n    let payload;\n    if (group === \"students\") {\n      payload = {\n        unit_id: answers.unit_id,\n        site: answers[\"Укажите проблемные зоны в официальном сайте колледжа\"],\n        // Можно добавить сюда логику, если есть соответствующие вопросы\n        social: answers[\"Укажите проблемные зоны в ведение социальных сетей и чатов\"],\n        // То же самое, добавьте сюда логику, если нужно\n        buffet: answers[\"Укажите проблемные зоны в работе буфета и колледжа\"],\n        audiences: \"\",\n        bathrooms: \"\",\n        // Добавьте логику, если необходимо\n        common_areas: \"\",\n        // Добавьте логику, если необходимо\n        equipment: \"\",\n        // Добавьте логику, если необходимо\n        sections: answers[\"Какие дополнительные мероприятия необходимо организовать?\"],\n        // Добавьте логику, если необходимо\n        education: \"\",\n        // Добавьте логику, если необходимо\n        administration: answers[\"Нуждаетесь ли вы в дополнительных мероприятиях в колледже?\"]\n      };\n    } else if (group === \"teachers\") {\n      payload = {\n        unit_id: answers.unit_id,\n        audiences: answers[\"Укажите проблемные зоны в аудиториях\"],\n        bathrooms: \"\",\n        // Добавьте логику, если необходимо\n        common_areas: \"\",\n        // Добавьте логику, если необходимо\n        equipment: \"\",\n        // Добавьте логику, если необходимо\n        info_accessibility: answers[\"Всегда ли доступна Вам вся необходимая информация, касающаяся учебного процесса?\"],\n        event_info_accessibility: answers[\"Нуждаетесь ли Вы лично в повышении квалификации?\"],\n        education: \"\",\n        // Добавьте логику, если необходимо\n        teacher_practice: \"\" // Добавьте логику, если необходимо\n      };\n    } else if (group === \"parents\") {\n      payload = {\n        unit_id: answers.unit_id,\n        comfortably: answers[\"Комфортно ли ощущает Ваш ребенок себя в колледже?\"],\n        equipment: \"\",\n        // Добавьте логику, если необходимо\n        consult: answers[\"Всегда ли при необходимости Вы можете обратиться в колледж за советом?\"],\n        difficulties: \"\",\n        // Добавьте логику, если необходимо\n        info_amount: \"\",\n        // Добавьте логику, если необходимо\n        meetings: \"\",\n        // Добавьте логику, если необходимо\n        conditions: \"\" // Добавьте логику, если необходимо\n      };\n    }\n    fetch(`http://192.168.88.123:8000/docs/${group}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"Ответ успешно отправлен\");\n      } else {\n        console.error(\"Ошибка при отправке\");\n      }\n    }).catch(error => {\n      console.error(\"Ошибка сети\", error);\n    });\n  };\n  if (!group) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: [\"\\u0410\\u043D\\u043A\\u0435\\u0442\\u0430 \\u0434\\u043B\\u044F \", group]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u0441 \\u0432\\u044B\\u0431\\u043E\\u0440\\u043E\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), (_questionsData$group = questionsData[group]) === null || _questionsData$group === void 0 ? void 0 : (_questionsData$group$ = _questionsData$group.question_choice) === null || _questionsData$group$ === void 0 ? void 0 : _questionsData$group$.questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: q\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${answers[q] === 1 ? \"btn-success\" : \"btn-outline-success\"} me-2`,\n        onClick: () => handleYesNoChange(q, 1),\n        children: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${answers[q] === 0 ? \"btn-danger\" : \"btn-outline-danger\"}`,\n        onClick: () => handleYesNoChange(q, 0),\n        children: \"\\u041D\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: \"\\u0420\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), (_questionsData$group2 = questionsData[group]) === null || _questionsData$group2 === void 0 ? void 0 : (_questionsData$group3 = _questionsData$group2.question_answer) === null || _questionsData$group3 === void 0 ? void 0 : _questionsData$group3.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: q\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: answers[q] || \"\",\n        onChange: e => handleTextChange(q, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-4\",\n      onClick: handleSubmit,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyForm, \"cUwib02qAG5NpbS20PD7W4pk0y0=\");\n_c = SurveyForm;\nexport default SurveyForm;\nvar _c;\n$RefreshReg$(_c, \"SurveyForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","questionsData","students","question_choice","type","questions","question_answer","teachers","parents","SurveyForm","_s","_questionsData$group","_questionsData$group$","_questionsData$group2","_questionsData$group3","group","setGroup","answers","setAnswers","url","window","location","href","tokenMatch","match","extractedToken","fetch","then","res","json","data","unit_id","reduce","acc","q","handleYesNoChange","question","value","prev","handleTextChange","handleSubmit","payload","site","social","buffet","audiences","bathrooms","common_areas","equipment","sections","education","administration","info_accessibility","event_info_accessibility","teacher_practice","comfortably","consult","difficulties","info_amount","meetings","conditions","method","headers","body","JSON","stringify","response","ok","console","log","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","idx","onClick","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/work/formFromSPO/form/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst questionsData = {\n  students: {\n    question_choice: {\n      type: \"yesNo\",\n      questions: [\n        \"Нуждаетесь ли вы в дополнительных мероприятиях в колледже?\",\n        \"Удовлетворены ли вы скоростью решения вопросов администрацией колледжа?\",\n      ],\n    },\n    question_answer: [\n      \"Какие дополнительные мероприятия необходимо организовать?\",\n      \"Укажите проблемные зоны в официальном сайте колледжа\",\n      \"Укажите проблемные зоны в ведение социальных сетей и чатов\",\n      \"Укажите проблемные зоны в работе буфета и колледжа\",\n    ],\n  },\n  teachers: {\n    question_choice: {\n      type: \"yesNo\",\n      questions: [\n        \"Всегда ли доступна Вам вся необходимая информация, касающаяся учебного процесса?\",\n        \"Нуждаетесь ли Вы лично в повышении квалификации?\",\n      ],\n    },\n    question_answer: [\"Укажите проблемные зоны в аудиториях\", \"Укажите проблемы учебного процесса\"],\n  },\n  parents: {\n    question_choice: {\n      type: \"yesNo\",\n      questions: [\n        \"Комфортно ли ощущает Ваш ребенок себя в колледже?\",\n        \"Всегда ли при необходимости Вы можете обратиться в колледж за советом?\",\n      ],\n    },\n    question_answer: [\"Укажите проблемные зоны в спортивном зале\", \"Укажите проблемы родительских собраний\"],\n  },\n};\n\nconst SurveyForm = () => {\n  const [group, setGroup] = useState(null);\n  const [answers, setAnswers] = useState({});\n\n  useEffect(() => {\n    const url = window.location.href;\n    const tokenMatch = url.match(/\\/([a-f0-9]{32})$/);\n    if (tokenMatch) {\n      const extractedToken = tokenMatch[1];\n\n      fetch(`http://192.168.88.123:8000/forms/${extractedToken}`)\n        .then((res) => res.json())\n        .then((data) => {\n          setGroup(data.group);\n          // Начальная структура answers\n          setAnswers({\n            unit_id: 0, // Предполагаем, что у нас есть unit_id\n            ...questionsData[data.group].question_answer.reduce((acc, q) => {\n              acc[q] = \"\"; // Изначально задаем пустую строку для текстовых ответов\n              return acc;\n            }, {}),\n            ...questionsData[data.group].question_choice.questions.reduce((acc, q) => {\n              acc[q] = 0; // Изначально задаем 0 для вопросов да/нет\n              return acc;\n            }, {}),\n          });\n        });\n    }\n  }, []);\n\n  const handleYesNoChange = (question, value) => {\n    setAnswers((prev) => ({ ...prev, [question]: value }));\n  };\n\n  const handleTextChange = (question, value) => {\n    setAnswers((prev) => ({ ...prev, [question]: value }));\n  };\n\n  const handleSubmit = () => {\n    let payload;\n\n    if (group === \"students\") {\n      payload = {\n        unit_id: answers.unit_id,\n        site: answers[\"Укажите проблемные зоны в официальном сайте колледжа\"], // Можно добавить сюда логику, если есть соответствующие вопросы\n        social: answers[\"Укажите проблемные зоны в ведение социальных сетей и чатов\"], // То же самое, добавьте сюда логику, если нужно\n        buffet: answers[\"Укажите проблемные зоны в работе буфета и колледжа\"],\n        audiences: \"\",\n        bathrooms: \"\", // Добавьте логику, если необходимо\n        common_areas: \"\", // Добавьте логику, если необходимо\n        equipment: \"\", // Добавьте логику, если необходимо\n        sections: answers[\"Какие дополнительные мероприятия необходимо организовать?\"], // Добавьте логику, если необходимо\n        education: \"\", // Добавьте логику, если необходимо\n        administration: answers[\"Нуждаетесь ли вы в дополнительных мероприятиях в колледже?\"],\n      };\n    } else if (group === \"teachers\") {\n      payload = {\n        unit_id: answers.unit_id,\n        audiences: answers[\"Укажите проблемные зоны в аудиториях\"],\n        bathrooms: \"\", // Добавьте логику, если необходимо\n        common_areas: \"\", // Добавьте логику, если необходимо\n        equipment: \"\", // Добавьте логику, если необходимо\n        info_accessibility: answers[\"Всегда ли доступна Вам вся необходимая информация, касающаяся учебного процесса?\"],\n        event_info_accessibility: answers[\"Нуждаетесь ли Вы лично в повышении квалификации?\"],\n        education: \"\", // Добавьте логику, если необходимо\n        teacher_practice: \"\", // Добавьте логику, если необходимо\n      };\n    } else if (group === \"parents\") {\n      payload = {\n        unit_id: answers.unit_id,\n        comfortably: answers[\"Комфортно ли ощущает Ваш ребенок себя в колледже?\"],\n        equipment: \"\", // Добавьте логику, если необходимо\n        consult: answers[\"Всегда ли при необходимости Вы можете обратиться в колледж за советом?\"],\n        difficulties: \"\", // Добавьте логику, если необходимо\n        info_amount: \"\", // Добавьте логику, если необходимо\n        meetings: \"\", // Добавьте логику, если необходимо\n        conditions: \"\", // Добавьте логику, если необходимо\n      };\n    }\n\n    fetch(`http://192.168.88.123:8000/docs/${group}`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(payload),\n    })\n    .then(response => {\n      if (response.ok) {\n        console.log(\"Ответ успешно отправлен\");\n      } else {\n        console.error(\"Ошибка при отправке\");\n      }\n    })\n    .catch(error => {\n      console.error(\"Ошибка сети\", error);\n    });\n  };\n\n  if (!group) return <p>Загрузка...</p>;\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"mb-4\">Анкета для {group}</h1>\n\n      <h2>Вопросы с выбором</h2>\n      {questionsData[group]?.question_choice?.questions.map((q, idx) => (\n        <div key={idx} className=\"mb-3\">\n          <p>{q}</p>\n          <button\n            className={`btn ${answers[q] === 1 ? \"btn-success\" : \"btn-outline-success\"} me-2`}\n            onClick={() => handleYesNoChange(q, 1)}\n          >\n            Да\n          </button>\n          <button\n            className={`btn ${answers[q] === 0 ? \"btn-danger\" : \"btn-outline-danger\"}`}\n            onClick={() => handleYesNoChange(q, 0)}\n          >\n            Нет\n          </button>\n        </div>\n      ))}\n\n      <h2 className=\"mt-4\">Расширенные вопросы</h2>\n      {questionsData[group]?.question_answer?.map((q, idx) => (\n        <div key={idx} className=\"mb-3\">\n          <p>{q}</p>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={answers[q] || \"\"}\n            onChange={(e) => handleTextChange(q, e.target.value)}\n          />\n        </div>\n      ))}\n\n      <button className=\"btn btn-primary mt-4\" onClick={handleSubmit}>\n        Отправить\n      </button>\n    </div>\n  );\n};\n\nexport default SurveyForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}